<Window x:Class="WPFMVVMBasic.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFMVVMBasic" xmlns:listitem="clr-namespace:WPFMVVMBasic.ListItem"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="480">
    <Grid Margin="4">
        <Grid Margin="0,0,0,40">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid DataContext="{Binding ListOne}" Margin="0,0,2,0">
                <ListBox VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch"
                         Margin="0,0,0,57"
                         ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                         SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}">
                    <!-- Make the listbox's item template (aka what the item will look like) -->
                    <!-- as a new datatemplate (aka a template/control thing) which will be the AListItem -->
                    <!-- the {Binding} bit right now is an object; an AListItemViewModel. so you can bind -->
                    <!-- the AListItem's datacontext to it using {Binding}. if you wanted to bind to the inside -->
                    <!-- of the AListItemViewModel, e.g, another object called AViewModel, do {Binding Path=SomeFieldHereInsideAListItemViewModel} -->
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <listitem:AListItem DataContext="{Binding}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <TextBox VerticalAlignment="Bottom"
                         HorizontalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         Padding="3" TextWrapping="Wrap" 
                         Height="24" Margin="0,0,80,0"
                         Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding AddInputToListCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button HorizontalAlignment="Right" 
                        VerticalAlignment="Bottom"
                        Width="75" Height="24"
                        Content="Add"
                        Command="{Binding AddInputToListCommand}"/>
                <Button VerticalAlignment="Bottom"
                        Margin="0,0,0,28" 
                        Height="24"
                        Content="Clear List" 
                        Command="{Binding ClearListCommand}"/>
            </Grid>
            <Grid DataContext="{Binding ListTwo}" Grid.Column="1" Margin="2 0 0 0">
                <ListBox VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch"
                         Margin="0,0,0,57"
                         ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                         SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}">
                    <!-- Make the listbox's item template (aka what the item will look like) -->
                    <!-- as a new datatemplate (aka a template/control thing) which will be the AListItem -->
                    <!-- the {Binding} bit right now is an object; an AListItemViewModel. so you can bind -->
                    <!-- the AListItem's datacontext to it using {Binding}. if you wanted to bind to the inside -->
                    <!-- of the AListItemViewModel, e.g, another object called AViewModel, do {Binding AViewModel} -->
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <listitem:AListItem DataContext="{Binding}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <TextBox VerticalAlignment="Bottom"
                         HorizontalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         Padding="3" TextWrapping="Wrap" 
                         Height="24" Margin="0,0,80,0"
                         Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding AddInputToListCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button HorizontalAlignment="Right" 
                        VerticalAlignment="Bottom"
                        Width="75" Height="24"
                        Content="Add"
                        Command="{Binding AddInputToListCommand}"/>
                <Button VerticalAlignment="Bottom"
                        Margin="0,0,0,28" 
                        Height="24"
                        Content="Clear List" 
                        Command="{Binding ClearListCommand}"/>
            </Grid>
        </Grid>
        <Grid Height="35" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Command="{Binding MoveItemBetweenListCommand}" CommandParameter="1to2" Content="Add to other list" Margin="0,0,2,0"/>
            <Button Command="{Binding MoveItemBetweenListCommand}" CommandParameter="2to1" Content="Add to other list" Margin="2,0,0,0" Grid.Column="1"/>
        </Grid>
    </Grid>
</Window>
